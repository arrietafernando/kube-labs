1. Instalacion:
Como primer paso instalar Docker. Ver instrucciones en el paso 1 de:
https://github.com/diegochavezcarro/docker-labs/blob/main/Instrucciones.txt
Segundo, instalar Minikube, el cluster local de Kubernetes, tiene algunas ventajas utilizarlo 
desde un Linux o un Linux dentro de una Virtual, ayuda con el acceso a los Services de Kubernetes.
https://minikube.sigs.k8s.io/docs/start/
Elegir el binary install
Tercero instalar kubectl:
https://kubernetes.io/es/docs/tasks/tools/included/install-kubectl-linux/
Instalar usando la administraci√≥n nativa de paquetes. Tmb es posible la forma binaria.

En el caso Windows con WSL2 funcionaran mejor algunos ejercicios que requieran mas uso de recursos. Algunos 
pasos de los ejercicios se tendran que ejecutar de forma diferente (vamos a ver despues el detalle, 
principalmente el uso de Services de Kubernetes):

El el caso Windows con Powershell:
Minikube:
https://storage.googleapis.com/minikube/releases/latest/minikube-windows-amd64.exe
Renombrarlo a minikube.exe y ponerlo en el PATH del sistema operativo (buscar system environment 
variables y agregar el path al exe)
Kubectl: 
Buscar cual es el ultimo estable:
https://storage.googleapis.com/kubernetes-release/release/stable.txt
Bajarlo y tambien ponerlo en el path del Sistema Operativo:
curl.exe -LO "https://dl.k8s.io/release/v1.25.0/bin/windows/amd64/kubectl.exe"
Si no tienen curl acceder a la url y empieza a bajarse el exe.

MacOS:
https://minikube.sigs.k8s.io/docs/start/
https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/#install-with-homebrew-on-macos
En ambos usar la opcion Homebrew.

Una vez instalado en todos los casos ver si se instalo bien el cliente:
kubectl version --client --output=yaml

Levantar el minikube:
minikube start
Por defecto si se tiene el Docker levantado Linux, Windows, Windows WSL2 usaran al mismo 
como virtualizacion para levantar el cluster local. macOS usara un virtualizador a nivel 
software, liviano, llamado Hyperkit.
Una vez levantado el cluster, ejecutar:
minikube status
Tambien, para mas detalles:
minikube profile list

Ahora kubectl deberia estar correctamente configurado para acceder tanto al client como al server:
kubectl version --output=yaml

2. Realizar Lab01, Lab02.
3. Luego el de la Carpeta python-redis
4. Continuar con Lab04, hasta Lab10.
5. Opcionales: 
Carpeta azure, ejemplo de AKS.
Carpeta opcionales, otros Container Runtimes
